---
title: "Will Peters STA9750-2024-FALL MP01"
---

Hello viewers,

**This is for the Mini Project01 Fiscal Characteristics of Major US Public Transit Systems**

I am going to start by including the answers at the start of the document and then later on provide the code below.

3.1. MTA New York City Transit – 10,832,855,350

3.2. Bus – 49,444,494,088

3.3 Number of trips – 180,458,819

3.5. Drop by 211,969,660

4.1. The most popular month for 2023 was October by Unlinked Passenger trips of 645,736,546.

4.2. The most popular mode for 2023 was Bus by Unlinked Passenger trips of 3,296,556,237. \\

4.3. The most travelled month for 2023 was August by Vehicle Revenue Miles of 422,002,435.

4.4. The most travelled mode for 2023 was Bus by Vehicle Revenue Miles of 2,229,613,411

6.1 MTA New York City Transit Heavy Rail with 1793073801 UPT

6.2 Port Imperial Ferry Corporation, Ferry Boat with a Farebox Recovery of 1.43

6.3 North Carolina State University, Bus with UPT/Expenses of 1.18

6.4 Hampton Jitney Commuter Bus with a fares/UPT of 41.29

6.5. Metropolitan Transportation Commission Vanpool with Expenses/VRM of 0.44

6.6. Jacksonville Transportation Authority , Ferryboat of 157.70

I decided to throw an additional fact for answer 4 as it was grouped together easier 2 x 2 solutions, And to answer the final question I would say that the Bus is the most efficient response as by my understanding it is about which mode of transport, is the best alternative to cars/driving and so the sheer volume of the bus is hard to ignore.

Now for the real fun the coding component.

**Preliminary Work to bring in the data**

if(!require("tidyverse")) install.packages("tidyverse")

# Let's start with Fare Revenue

library(tidyverse) if(!file.exists("2022_fare_revenue.xlsx")){ \# This should work *in theory* but in practice it's still a bit finicky \# If it doesn't work for you, download this file 'by hand' in your \# browser and save it as "2022_fare_revenue.xlsx" in your project \# directory.

download.file("http://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx", destfile="2022_fare_revenue.xlsx", quiet=FALSE) } FARES \<- readxl::read_xlsx("2022_fare_revenue.xlsx") \|\>

select(-`State/Parent NTD ID`, -`Reporter Type`, -`Reporting Module`, -`TOS`, -`Passenger Paid Fares`, -`Organization Paid Fares`) \|\>

filter(`Expense Type` == "Funds Earned During Period") \|\>

select(-`Expense Type`)

# Next, expenses

if(!file.exists("2022_expenses.csv")){ \# This should work *in theory* but in practice it's still a bit finicky \# If it doesn't work for you, download this file 'by hand' in your \# browser and save it as "2022_expenses.csv" in your project \# directory.

download.file("https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true", destfile="2022_expenses.csv", quiet=FALSE) }

EXPENSES \<- readr::read_csv("2022_expenses.csv") \|\>

select(`NTD ID`, `Agency`, `Total`, `Mode`) \|\>

mutate(`NTD ID` = as.integer(`NTD ID`)) \|\>

rename(Expenses = Total) \|\>

group_by(`NTD ID`, `Mode`) \|\>

summarize(Expenses = sum(Expenses)) \|\>

ungroup()

FINANCIALS \<- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))

# Monthly Transit Numbers

library(tidyverse) if(!file.exists("ridership.xlsx")){ \# This should work *in theory* but in practice it's still a bit finicky \# If it doesn't work for you, download this file 'by hand' in your \# browser and save it as "ridership.xlsx" in your project \# directory. download.file("https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx", destfile="ridership.xlsx", quiet=FALSE) }

TRIPS \<- readxl::read_xlsx("ridership.xlsx", sheet="UPT") \|\>

filter(`Mode/Type of Service Status` == "Active") \|\>

select(-`Legacy NTD ID`, -`Reporter Type`, -`Mode/Type of Service Status`, -`UACE CD`, -`TOS`) \|\>

pivot_longer(-c(`NTD ID`:`3 Mode`), names_to="month", values_to="UPT") \|\>

drop_na() \|\>

mutate(month=my(month)) \# Parse \_m_onth \_y_ear date specs MILES \<- readxl::read_xlsx("ridership.xlsx", sheet="VRM") \|\>

filter(`Mode/Type of Service Status` == "Active") \|\>

select(-`Legacy NTD ID`, -`Reporter Type`, -`Mode/Type of Service Status`, -`UACE CD`, -`TOS`) \|\>

pivot_longer(-c(`NTD ID`:`3 Mode`), names_to="month", values_to="VRM") \|\>

drop_na() \|\>

group_by(`NTD ID`, `Agency`, `UZA Name`, `Mode`, `3 Mode`, month) \|\>

summarize(VRM = sum(VRM)) \|\>

ungroup() \|\>

mutate(month=my(month)) \# Parse \_m_onth \_y_ear date specs

USAGE \<- inner_join(TRIPS, MILES) \|\>

mutate(`NTD ID` = as.integer(`NTD ID`))

**Task 1**

USAGE \<- USAGE \|\>

rename(metro_area = `UZA Name`)

**Task 2**

USAGE\<- USAGE \|\>

mutate(Mode=case_when( Mode == "AR" \~ "Alaska Railroad", Mode == "CB" \~ "Commuter Bus", Mode == "CC" \~ "Cable Car", Mode == "CR" \~ "Commuter Rail", Mode == "DR" \~ "Demand Response", Mode == "FB" \~ "Ferryboat", Mode == "HR" \~ "Heavy Rail", Mode == "IP" \~ "Inclined Plane", Mode == "LR" \~ "Light Rail", Mode == "MB" \~ "Bus", Mode == "MG" \~ "Monorail and Automated Guideway modes", Mode == "PB" \~ "Publico", Mode == "RB" \~ "Bus Rapid Transit", Mode == "SR" \~ "Streetcar Rail", Mode == "TB" \~ "Trolleybus", Mode == "TR" \~ "Aerial Tramways", Mode == "VP" \~ "Vanpool", Mode == "YR" \~ "Hybrid Rail", TRUE \~ "Unknown"))

FINANCIALS \<- FINANCIALS \|\>

mutate(Mode=case_when( Mode == "AR" \~ "Alaska Railroad", Mode == "CB" \~ "Commuter Bus", Mode == "CC" \~ "Cable Car", Mode == "CR" \~ "Commuter Rail", Mode == "DR" \~ "Demand Response", Mode == "FB" \~ "Ferryboat", Mode == "HR" \~ "Heavy Rail", Mode == "IP" \~ "Inclined Plane", Mode == "LR" \~ "Light Rail", Mode == "MB" \~ "Bus", Mode == "MG" \~ "Monorail and Automated Guideway modes", Mode == "PB" \~ "Publico", Mode == "RB" \~ "Bus Rapid Transit", Mode == "SR" \~ "Streetcar Rail", Mode == "TB" \~ "Trolleybus", Mode == "TR" \~ "Aerial Tramways", Mode == "VP" \~ "Vanpool", Mode == "YR" \~ "Hybrid Rail", TRUE \~ "Unknown"))

sample_n(FINANCIALS, 1000) \|\>

DT::datatable()

if(!require("DT")) install.packages("DT") library(DT) if(!require("tidyverse")) install.packages("tidyverse")

sample_n(USAGE, 1000) \|\>

distinct(Agency) \|\>

DT::datatable()

print(dist)

**Task 3**

Usage_Summary \<- USAGE \|\>

group_by(Agency) \|\>

summarize(total_vrm = sum(VRM, na.rm = TRUE)) \|\>

ungroup() \|\>

arrange(desc(total_vrm))

Usage_Summary \|\>

DT::datatable()

Usage_Mode_Summary \<- USAGE \|\>

group_by(Mode) \|\>

summarize(total_vrm = sum(VRM, na.rm = TRUE)) \|\>

ungroup() \|\>

arrange(desc(total_vrm))

Usage_Mode_Summary \|\>

DT::datatable()

Usage_Month \<- USAGE \|\>

filter (month == "2024-05-01") \|\>

filter (Mode == "Heavy Rail") \|\>

filter (Agency == "MTA New York City Transit") \|\>

group_by(month) \|\>

summarize(total_vrm = sum(VRM, na.rm = TRUE),num_trips = sum(UPT, na.rm = TRUE))

Usage_Month \|\> DT::datatable()

Longest_avg_trip \<- USAGE \|\>

filter (month == "2024-05-01") \|\>

group_by(Mode) \|\>

summarize(total_vrm = sum(VRM, na.rm = TRUE),num_trips = sum(UPT, na.rm = TRUE),avg_trip = total_vrm/num_trips) \|\>

arrange(desc(avg_trip))

Longest_avg_trip \|\>

DT::datatable()

drop_ridership \<- USAGE \|\>

filter (Mode == "Heavy Rail") \|\>

filter (Agency == "MTA New York City Transit") \|\>

group_by(month) \|\>

summarize(num_trips = sum(UPT, na.rm = TRUE))

drop_ridership \|\>

DT::datatable()

**Task 4**

most_popular_month \<- USAGE \|\>

filter (year(month) == 2023) \|\>

group_by(month) \|\>

summarize(num_trips = sum(UPT, na.rm = TRUE)) \|\>

arrange(desc(num_trips))

most_popular_month \|\> DT::datatable()

most_popular_mode \<- USAGE \|\>

filter (year(month) == 2023) \|\>

group_by(Mode) \|\>

summarize(num_trips = sum(UPT, na.rm = TRUE)) \|\>

arrange(desc(num_trips))

most_popular_mode \|\>

DT::datatable()

most_travelled_month \<- USAGE \|\>

filter (year(month) == 2023) \|\>

group_by(month) \|\>

summarize(distance_travelled = sum(VRM, na.rm = TRUE)) \|\>

arrange(desc(distance_travelled))

most_travelled_month \|\>

DT::datatable()

most_travelled_mode \<- USAGE \|\>

filter (year(month) == 2023) \|\>

group_by(Mode) \|\>

summarize(distance_travelled = sum(VRM, na.rm = TRUE)) \|\>

arrange(desc(distance_travelled))

most_travelled_mode \|\>

DT::datatable()

##Grouped Usage## **Task 5**

USAGE_2022_ANNUAL \<- USAGE \|\>

filter(year(month) == 2022) \|\>

group_by(`NTD ID`,Agency,metro_area,Mode) \|\>

summarize(UPT = sum(UPT, na.rm = TRUE),VRM = sum(VRM, na.rm = TRUE)) \|\>

ungroup ()

USAGE_2022_ANNUAL \|\> DT::datatable()

USAGE_AND_FINANCIALS \<- left_join(USAGE_2022_ANNUAL, FINANCIALS_2, join_by(`NTD ID`, Mode)) \|\>

drop_na()

USAGE_AND_FINANCIALS \|\>

DT::datatable()

**Task 6**

Farebox1 \<- USAGE_AND_FINANCIALS \|\>

group_by(Agency,Mode) \|\>

summarize(UPT = sum(UPT, na.rm = TRUE),VRM = sum(VRM, na.rm = TRUE)) \|\>

filter(sum(UPT,na.rm = TRUE)\>400000) \|\>

ungroup () \|\>

arrange(desc(UPT))

Farebox1 \|\> DT::datatable()

Farebox2 \<- USAGE_AND_FINANCIALS \|\>

group_by(Agency,Mode) \|\>

summarize(Expenses = sum(Expenses, na.rm = TRUE),`Total Fares` = sum(`Total Fares`, na.rm = TRUE),UPT = sum(UPT, na.rm = TRUE),`Farebox Recovery` = `Total Fares`/Expenses) \|\>

filter(UPT \> 400000) \|\>

ungroup () \|\>

arrange(desc(`Farebox Recovery`))

Farebox2 \|\>

DT::datatable()

Farebox3 \<- USAGE_AND_FINANCIALS \|\>

group_by(Agency,Mode) \|\>

summarize(Expenses = sum(Expenses, na.rm = TRUE),`Total Fares` = sum(`Total Fares`, na.rm = TRUE),UPT = sum(UPT, na.rm = TRUE),`Low_Expenses` = Expenses/UPT) \|\>

filter(UPT \> 400000) \|\>

ungroup () \|\>

arrange(`Low_Expenses`)

Farebox3 \|\> DT::datatable()

Farebox4 \<- USAGE_AND_FINANCIALS \|\>

group_by(Agency,Mode) \|\>

summarize(Expenses = sum(Expenses, na.rm = TRUE),`Total Fares` = sum(`Total Fares`, na.rm = TRUE),UPT = sum(UPT, na.rm = TRUE),`High_Fares` = `Total Fares`/UPT) \|\>

filter(UPT \> 400000) \|\>

ungroup () \|\> arrange(`High_Fares`)

Farebox4 \|\>

DT::datatable()

Farebox5 \<- USAGE_AND_FINANCIALS \|\>

group_by(Agency,Mode) \|\>

summarize(Expenses = sum(Expenses, na.rm = TRUE),VRM = sum(VRM, na.rm = TRUE),`Total Fares` = sum(`Total Fares`, na.rm = TRUE),UPT = sum(UPT, na.rm = TRUE),`Low_Expenses_VRM` = Expenses/VRM) \|\>

filter(UPT \> 400000) \|\>

ungroup () \|\>

arrange(`Low_Expenses_VRM`)

Farebox5 \|\> DT::datatable()

Farebox6 \<- USAGE_AND_FINANCIALS \|\>

group_by(Agency,Mode) \|\>

summarize(Expenses = sum(Expenses, na.rm = TRUE),VRM = sum(VRM, na.rm = TRUE),`Total Fares` = sum(`Total Fares`, na.rm = TRUE),UPT = sum(UPT, na.rm = TRUE),`High_Fares_VRM` = `Total Fares`/VRM) \|\>

filter(UPT \> 400000) \|\>

ungroup () \|\>

arrange(desc(`High_Fares_VRM`))

Farebox6 \|\>

DT::datatable()
